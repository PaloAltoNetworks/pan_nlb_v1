{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Creates an AWS Network Load balancer, which multiplexes traffic to registered scaled out back end web servers",
  "Parameters": {
    "VPCName" : {
      "Description" : "Name of the newly created VPC",
      "Type" : "String",
      "MinLength": "6",
      "MaxLength": "24",
      "Default" : "panwVPC"
    },
    "VPCCIDR": {
      "Type": "String",
      "Default": "192.168.0.0/16",
      "Description": "Enter the VPC CIDR that you want to use",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    },
    "NLBSubnetIpBlocks": {
        "Description": "Management subnet comma-delimited list of CIDR blocks",
        "Type": "CommaDelimitedList",
        "Default": "192.168.0.0/24, 192.168.10.0/24"
    },
    "VpcAzs": {
      "Type": "List<AWS::EC2::AvailabilityZone::Name>",
      "Description": "Enter the list of Availability Zones (Based on Number of AZs above)"
    }
  },
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
        "ParameterLabels" : {
            "VPCName": {"default": "VPC Name:"},
            "VPCCIDR": {"default": "CIDR Block for the VPC:"}
      }
    }
  },
  "Resources": {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref" : "VPCCIDR" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "MGMT" },
          { "Key" : "Name", "Value": {"Ref": "VPCName"} }
        ]
      }
    },
    "NLBSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::Select" : [ "0", {"Ref" : "VpcAzs"} ] },
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Select" : [ "0", {"Ref" : "NLBSubnetIpBlocks"} ] },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "NLB and Web" },
          { "Key" : "Name", "Value" : { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "NLB Subnet" ] ] }}
        ]
      },
      "DependsOn": [ "VPC" ]
    },
    "NLBSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::Select" : [ "1", {"Ref" : "VpcAzs"} ] },
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Select" : [ "1", {"Ref" : "NLBSubnetIpBlocks"} ] },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "NLB and Web" },
          { "Key" : "Name", "Value" : { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "NLB Subnet" ] ] }}
        ]
      },
      "DependsOn": [ "VPC" ]
    },
    "GatewayToInternet" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       },
       "DependsOn": [ "VPC", "InternetGateway" ]
    },
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "MGMT" },
          { "Key" : "Name", "Value" : { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "InternetGateway" ] ] }}
        ]
      }
    },
    "NLBRoute1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "NLBRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      },
      "DependsOn": [ "NLBRouteTable", "InternetGateway" ]
    },
    "NLBRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" },  "NLBRouteTable" ] ] }}
        ]
      },
      "DependsOn": [ "VPC" ]
    },
    "NLBRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref": "NLBSubnet1" },
        "RouteTableId" : { "Ref" : "NLBRouteTable" }
      },
      "DependsOn": [ "NLBSubnet1", "NLBRouteTable" ]
    },
    "NLBRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref": "NLBSubnet2" },
        "RouteTableId" : { "Ref" : "NLBRouteTable" }
      },
      "DependsOn": [ "NLBSubnet2", "NLBRouteTable" ]
    }
  }
}